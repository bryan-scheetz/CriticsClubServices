#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CriticsClubServices
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CriticsClubDB")]
	public partial class CriticsClubDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbook(book instance);
    partial void Updatebook(book instance);
    partial void Deletebook(book instance);
    partial void Insertbook1(book1 instance);
    partial void Updatebook1(book1 instance);
    partial void Deletebook1(book1 instance);
    partial void Insertclub(club instance);
    partial void Updateclub(club instance);
    partial void Deleteclub(club instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertmeeting(meeting instance);
    partial void Updatemeeting(meeting instance);
    partial void Deletemeeting(meeting instance);
    #endregion
		
		public CriticsClubDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CriticsClubDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CriticsClubDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriticsClubDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriticsClubDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CriticsClubDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<book> books
		{
			get
			{
				return this.GetTable<book>();
			}
		}
		
		public System.Data.Linq.Table<book1> book1s
		{
			get
			{
				return this.GetTable<book1>();
			}
		}
		
		public System.Data.Linq.Table<club> clubs
		{
			get
			{
				return this.GetTable<club>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<meeting> meetings
		{
			get
			{
				return this.GetTable<meeting>();
			}
		}
		
		public System.Data.Linq.Table<clubs_member> clubs_members
		{
			get
			{
				return this.GetTable<clubs_member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.books")]
	public partial class book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _book_id;
		
		private string _title;
		
		private string _author;
		
		private string _genre;
		
		private string _subgenre;
		
		private int _pages;
		
		private string _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_idChanging(int value);
    partial void Onbook_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OnsubgenreChanging(string value);
    partial void OnsubgenreChanged();
    partial void OnpagesChanging(int value);
    partial void OnpagesChanged();
    partial void OnpublisherChanging(string value);
    partial void OnpublisherChanged();
    #endregion
		
		public book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(100)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subgenre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string subgenre
		{
			get
			{
				return this._subgenre;
			}
			set
			{
				if ((this._subgenre != value))
				{
					this.OnsubgenreChanging(value);
					this.SendPropertyChanging();
					this._subgenre = value;
					this.SendPropertyChanged("subgenre");
					this.OnsubgenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pages", DbType="Int NOT NULL")]
		public int pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				if ((this._pages != value))
				{
					this.OnpagesChanging(value);
					this.SendPropertyChanging();
					this._pages = value;
					this.SendPropertyChanged("pages");
					this.OnpagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher", DbType="VarChar(100)")]
		public string publisher
		{
			get
			{
				return this._publisher;
			}
			set
			{
				if ((this._publisher != value))
				{
					this.OnpublisherChanging(value);
					this.SendPropertyChanging();
					this._publisher = value;
					this.SendPropertyChanged("publisher");
					this.OnpublisherChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.books")]
	public partial class book1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _book_id;
		
		private string _title;
		
		private string _author;
		
		private string _genre;
		
		private string _subgenre;
		
		private int _pages;
		
		private string _publisher;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_idChanging(int value);
    partial void Onbook_idChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnauthorChanging(string value);
    partial void OnauthorChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OnsubgenreChanging(string value);
    partial void OnsubgenreChanged();
    partial void OnpagesChanging(int value);
    partial void OnpagesChanged();
    partial void OnpublisherChanging(string value);
    partial void OnpublisherChanged();
    #endregion
		
		public book1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_author", DbType="VarChar(100)")]
		public string author
		{
			get
			{
				return this._author;
			}
			set
			{
				if ((this._author != value))
				{
					this.OnauthorChanging(value);
					this.SendPropertyChanging();
					this._author = value;
					this.SendPropertyChanged("author");
					this.OnauthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subgenre", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string subgenre
		{
			get
			{
				return this._subgenre;
			}
			set
			{
				if ((this._subgenre != value))
				{
					this.OnsubgenreChanging(value);
					this.SendPropertyChanging();
					this._subgenre = value;
					this.SendPropertyChanged("subgenre");
					this.OnsubgenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pages", DbType="Int NOT NULL")]
		public int pages
		{
			get
			{
				return this._pages;
			}
			set
			{
				if ((this._pages != value))
				{
					this.OnpagesChanging(value);
					this.SendPropertyChanging();
					this._pages = value;
					this.SendPropertyChanged("pages");
					this.OnpagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publisher", DbType="VarChar(100)")]
		public string publisher
		{
			get
			{
				return this._publisher;
			}
			set
			{
				if ((this._publisher != value))
				{
					this.OnpublisherChanging(value);
					this.SendPropertyChanging();
					this._publisher = value;
					this.SendPropertyChanged("publisher");
					this.OnpublisherChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clubs")]
	public partial class club : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _club_id;
		
		private string _club_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclub_idChanging(int value);
    partial void Onclub_idChanged();
    partial void Onclub_nameChanging(string value);
    partial void Onclub_nameChanged();
    #endregion
		
		public club()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this.Onclub_idChanging(value);
					this.SendPropertyChanging();
					this._club_id = value;
					this.SendPropertyChanged("club_id");
					this.Onclub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string club_name
		{
			get
			{
				return this._club_name;
			}
			set
			{
				if ((this._club_name != value))
				{
					this.Onclub_nameChanging(value);
					this.SendPropertyChanging();
					this._club_name = value;
					this.SendPropertyChanged("club_name");
					this.Onclub_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _first;
		
		private string _last;
		
		private string _email;
		
		private System.Nullable<int> _club_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnfirstChanging(string value);
    partial void OnfirstChanged();
    partial void OnlastChanging(string value);
    partial void OnlastChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onclub_idChanging(System.Nullable<int> value);
    partial void Onclub_idChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first", DbType="VarChar(100)")]
		public string first
		{
			get
			{
				return this._first;
			}
			set
			{
				if ((this._first != value))
				{
					this.OnfirstChanging(value);
					this.SendPropertyChanging();
					this._first = value;
					this.SendPropertyChanged("first");
					this.OnfirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last", DbType="VarChar(100)")]
		public string last
		{
			get
			{
				return this._last;
			}
			set
			{
				if ((this._last != value))
				{
					this.OnlastChanging(value);
					this.SendPropertyChanging();
					this._last = value;
					this.SendPropertyChanged("last");
					this.OnlastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int")]
		public System.Nullable<int> club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this.Onclub_idChanging(value);
					this.SendPropertyChanging();
					this._club_id = value;
					this.SendPropertyChanged("club_id");
					this.Onclub_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meetings")]
	public partial class meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _meeting_id;
		
		private int _club_id;
		
		private System.DateTime _date;
		
		private int _book_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeeting_idChanging(int value);
    partial void Onmeeting_idChanged();
    partial void Onclub_idChanging(int value);
    partial void Onclub_idChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onbook_idChanging(int value);
    partial void Onbook_idChanged();
    #endregion
		
		public meeting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int meeting_id
		{
			get
			{
				return this._meeting_id;
			}
			set
			{
				if ((this._meeting_id != value))
				{
					this.Onmeeting_idChanging(value);
					this.SendPropertyChanging();
					this._meeting_id = value;
					this.SendPropertyChanged("meeting_id");
					this.Onmeeting_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int NOT NULL")]
		public int club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this.Onclub_idChanging(value);
					this.SendPropertyChanging();
					this._club_id = value;
					this.SendPropertyChanged("club_id");
					this.Onclub_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="Int NOT NULL")]
		public int book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clubs_members")]
	public partial class clubs_member
	{
		
		private int _club_id;
		
		private int _member_id;
		
		public clubs_member()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_club_id", DbType="Int NOT NULL")]
		public int club_id
		{
			get
			{
				return this._club_id;
			}
			set
			{
				if ((this._club_id != value))
				{
					this._club_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_member_id", DbType="Int NOT NULL")]
		public int member_id
		{
			get
			{
				return this._member_id;
			}
			set
			{
				if ((this._member_id != value))
				{
					this._member_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
